// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  phone     String?
  address   String?
  city      String?
  state     String?
  industry  String?
  website   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  projects   Project[]
  businesses Business[]
  activities Activity[]
}

model Project {
  id          Int              @id @default(autoincrement())
  title       String
  description String?
  type        String?
  stage       String?
  status      String           @default("active")
  accessToken String           @unique
  totalAmount Float            @default(0)
  paidAmount  Float            @default(0)
  notes       String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  
  company      Company          @relation(fields: [companyId], references: [id])
  companyId    Int
  messages     ProjectMessage[]
  projectFiles ProjectFile[]
  activities   Activity[]
  
  @@index([accessToken])
}

model ProjectMessage {
  id          Int      @id @default(autoincrement())
  senderType  String   // "client" | "admin"
  senderName  String?
  content     String
  attachments String[] @default([])
  createdAt   DateTime @default(now())
  
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   Int
  
  @@index([projectId, createdAt])
}

model ProjectFile {
  id           Int      @id @default(autoincrement())
  fileName     String
  fileUrl      String
  fileSize     Int?
  fileType     String?
  uploadedBy   String   // "client" | "admin"
  uploaderName String?
  description  String?
  createdAt    DateTime @default(now())
  
  project      Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId    Int
  
  @@index([projectId])
}

model Activity {
  id          Int      @id @default(autoincrement())
  type        String
  description String
  createdAt   DateTime @default(now())
  
  company     Company? @relation(fields: [companyId], references: [id])
  companyId   Int?
  project     Project? @relation(fields: [projectId], references: [id])
  projectId   Int?
  business    Business? @relation(fields: [businessId], references: [id])
  businessId  Int?
  
  @@index([companyId])
  @@index([projectId])
  @@index([businessId])
}

// Legacy business model for backward compatibility
model Business {
  id           Int      @id @default(autoincrement())
  name         String
  email        String?
  phone        String?
  address      String?
  city         String?
  state        String?
  businessType String?
  stage        String?
  notes        String?
  website      String?
  score        Float?
  priority     String?
  source       String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  company      Company? @relation(fields: [companyId], references: [id])
  companyId    Int?
  activities   Activity[]
  
  @@index([email])
  @@index([stage])
}
